#!/bin/bash -e

# Program information
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROGRAM_NAME="mkvnmp4"
PROGRAM_LOCATION="${DIR}/${PROGRAM_NAME}"
VERSION="2.0.0b2"

if [[ ! -e "$(command -v allunix)" ]]; then
    echo "AllUnix file is missing."
    wget -O - http://bit.ly/jp_allunix | bash
fi

. "$(command -v allunix)"
git_local_bin_install &&
no_sudo

if [[ "$(uname)" == "Darwin" ]]; then
    if [ -d /Volumes/8TB_EXT ]; then
        extDrive="/Volumes/8TB_EXT"
    else
        echo "The default external drive is not found."
        read -r -p "Please enter the full path to the external drive. " extDrive
    fi
else
    echo "Currently, only meant for macOS."
    exit 1
fi

tmp_file="$(mktemp)"
TV_EXT="${extDrive}/TV/*/*/"
MOVIES_EXT="${extDrive}/Movies"
PORN_EXT="${extDrive}/Porn/*/*/*"

function USAGE() {
cat << EOF
${PROGRAM_NAME}

    This program is to remove the duplicated .mkv files when the corresponding .mp4 file is present.

${RED}Currently, this does not make sure the new, .mp4 version is not currently being worked on - duplicated from the .mkv - or even correctly sourced from the .mkv.

            MAKE SURE TO DOUBLE CHECK FIRST!${NORMAL}
EOF
}

function variableOutput() {
    while IFS= read -r file; do
        if [[ ! -e ${file%.mkv}.mp4 ]]; then
            echo ""
            echo "$file ${RED}<--THIS ONE${NORMAL}"
            osascript -e "
                set filePath to POSIX file \"$file\"
                set filePath to filePath as alias
                tell application \"Subler\"
                    add to queue filePath
                end tell"
        fi
    done < <(find . -type f -iname "*.mkv" -exec echo {} \; ) | sudo tee "$tmp_file"
}

function CONFIRM_DEL() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] &&
        echo "${RED}Erasing ${file}....${NORMAL}"
        echo ""
        rm -f "$file" ;
    done < <(find . -type f -iname "*.mkv" -exec echo {} \; )
}

function SHOW_OUTPUT() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] &&
        echo "
        $file ${RED}<--THIS ONE${NORMAL}
        ${file%.mkv}.mp4";
    done < <(find . -type f -iname "*.mkv" -exec echo {} \; ) | sudo tee "$tmp_file"
}

function iSHOW_OUTPUT() {
    SHOW_OUTPUT | tee "$tmp_file"
}

function kSHOW_OUTPUT() {
    if [[ $(iSHOW_OUTPUT) != "" ]]; then
cat << EOF

Please, examine the above files to confirm they are ready to be removed.

The next step is ${RED}"nuclear"${NORMAL}, as there is no going back after files are deleted.
Usually....

EOF
        press_enter &&
        CONFIRM_DEL &&
        echo "Finished Deleting...."
        echo ""
    fi
}

trap 'rm $tmp_file; HELP_VERSION; exit 1' SIGHUP SIGINT SIGTERM

# This section is for the `dialog` prompts.
# It uses the main `cmd` variable, as both prompts are simple and
# the same size.
cmd=(dialog --keep-tite --menu "Select options: "  10 30 30)
# Then, the different menu options have different variable arrays
mediaOptions=(
    1 "TV"
    2 "Movies"
    3 "Porn"
)
actionOptions=(
    1 "Subler"
    2 "Delete_Duplicates"
)
# Then, calling the actual dialog and assigning a number to the variable
# happens here.
# And it assigns the NUMBER of the selection to the variable.
choicesAction=$("${cmd[@]}" "${actionOptions[@]}" 2>&1 >/dev/tty)
choicesMedia=$("${cmd[@]}" "${mediaOptions[@]}" 2>&1 >/dev/tty)

# These function blocks were me playing with Apple's Automation stuff.
function appleScriptFunction() {
    # This first item, the variable, is like the dialog selector from above,
    # but it outputs the selections NAME into the variable.
    choices=$(osascript -l JavaScript -e '
        var app = Application.currentApplication()
        app.includeStandardAdditions = true

        var locationChoices = ["TV", "Movies", "Porn", "Custom"]
        var locationList = app.chooseFromList(locationChoices, {
            withPrompt: "Select options:",
            defaultItems: ["Custom"]
        })
        locationList' 2>&1)

    # This function is a custom directory selector, for narrowing
    # the operation of the script.
    function osascriptCustomSelector() {
        directories="$(osascript -l JavaScript -e '
            var app = Application.currentApplication()
            app.includeStandardAdditions = true

            var outputFolder = app.chooseFolder({
                withPrompt: "Please select a specific Directory to search through:",
                multipleSelectionsAllowed: true
            })
            outputFolder' | cut -d '"' -f2)"
    }
}

function finalDelete() {
    for choice in $choicesMedia; do
        case $choice in
            1 | TV )
                for f in $TV_EXT ; do
                    cd "$f" || continue;
                    echo "${PWD}";
                    SHOW_OUTPUT;
                    kSHOW_OUTPUT;
                    cd "$OLDPWD" || ! break;
                done || ! cd - >&2;;
            2 | Movies )
                for f in $MOVIES_EXT ; do
                    cd "$f" || continue;
                    echo "${PWD}";
                    SHOW_OUTPUT;
                    kSHOW_OUTPUT;
                    cd "$OLDPWD" || ! break;
                done || ! cd - >&2;;
            3 | Porn )
                for f in $PORN_EXT ; do
                    cd "$f" || continue;
                    echo "${PWD}";
                    SHOW_OUTPUT;
                    kSHOW_OUTPUT;
                    cd "$OLDPWD" || ! break;
                done || ! cd - >&2;;
            4 | Custom )
                osascriptCustomSelector;
                myFiles=("$directories"/*)
                for f in "${myFiles[@]}" ; do
                    cd "$f" || continue;
                    echo "${PWD}";
                    SHOW_OUTPUT;
                    kSHOW_OUTPUT;
                    cd "$OLDPWD" || ! break;
                done || ! cd - >&2;
                unset f myFiles directories;;
            * )
                USAGE; HELP_VERSION; exit 1;;
        esac
    done
}

for choice in $choicesAction; do
    case $choice in
        1 | Subler )
            for choice2 in $choicesMedia; do
                case $choice2 in
                    1 | TV )
                        for f in $TV_EXT ; do
                            cd "$f" || continue;
                            echo "${PWD}";
                            variableOutput
                            cd "$OLDPWD" || ! break;
                        done || ! cd - >&2;;
                    2 | Movies )
                        for f in $MOVIES_EXT ; do
                            cd "$f" || continue;
                            echo "${PWD}";
                            variableOutput;
                            cd "$OLDPWD" || ! break;
                        done || ! cd - >&2;;
                    Porn )
                        for f in $PORN_EXT ; do
                            cd "$f" || continue;
                            echo "${PWD}";
                            variableOutput;
                            cd "$OLDPWD" || ! break;
                        done || ! cd - >&2;;
                    Custom )
                        osascriptCustomSelector;
                        myFiles=("$directories"/*)
                        for f in "${myFiles[@]}" ; do
                            cd "$f" || continue;
                            echo "${PWD}";
                            variableOutput;
                            cd "$OLDPWD" || ! break;
                        done || ! cd - >&2;
                        unset f myFiles directories;;
                    * )
                        USAGE; HELP_VERSION; exit 1;;
                esac
            done
            ;;
        2 | Delete_Duplicates )
            finalDelete;;
    esac
done

echo ""
HELP_VERSION &&
exit 0
