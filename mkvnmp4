#!/bin/bash -e

# This script is specifically for finding an .mp4 and its corresponding .mkv
# file for removal.

# Program information
PROGRAM_NAME="mkvnmp4"
PROGRAM_AUTHOR="Justin Partain"
PROGRAM_AUTHOR_CONTACT="$PROGRAM_NAME_noreply@jpcdi.com"
PROGRAM_AUTHOR_FULL="JPCDI, JPartain89 and $PROGRAM_AUTHOR"
VERSION="1.0"
USERNAME="$(logname)"

. allunix

if [[ "$(uname)" == "Darwin" ]]; then
    HOME="/Users/$USERNAME"
    OWNER="$USERNAME:admin"
else
    HOME="/home/$USERNAME"
    OWNER="$USERNAME:$USERNAME"
fi
USER_BIN="$HOME/bin"
GIT_HOME="$HOME/git"
if [ ! -e "$HOME/log" ]; then mkdir "$HOME/log"; fi
if [ ! -e "$LOGFILE" ]; then touch "$LOGFILE"; fi
if [[ $(git -C "$GIT_HOME/$PROGRAM_NAME" pull) != "Already up-to-date." ]]; then
    "$GIT_HOME/$PROGRAM_NAME/$PROGRAM_NAME" && exit 0
fi

git_cloning
userhome_bin_install

CONFIRM_DEL() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] && rm -f "${file%.mkv}.mp4" ;
    done < <(find "/Volumes/RAID_EXT/Movies" "/Volumes/RAID_EXT/TV" \
        "/Volumes/RAID_EXT/Porn" \
        -type f \( -iname "*.mkv" ! -iname ".*" \) -exec echo {} \; )
}

SHOW_OUTPUT() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] && echo "$file" ;
    done < <(find "/Volumes/RAID_EXT/Movies" "/Volumes/RAID_EXT/TV" \
        "/Volumes/RAID_EXT/Porn" \
        -type f \( -iname "*.mkv" ! -iname ".*" \) -exec echo {} \; )
}

USAGE() {
cat <<- EOF
$PROGRAM_NAME

${RED}This script must be called from within the directory you want to work on,
or you must assume it will recursively search and take action from within the
entire directory tree below your current location.${NORMAL}

${BLUE}First, we will show${NORMAL} ${RED}what${NORMAL} ${BLUE}files will be removed.
This list will be the specific .mkv files that are duplicates, shown without
their .mp4 dopplegangers.
Then, you must enter${NORMAL} ${RED}`y` or `N`${NORMAL} ${BLUE}to confirm or deny the deletion.${NORMAL}
EOF
}

if [[ $(SHOW_OUTPUT) == "" ]]; then
    echo "We were unable to find any duplicate files."
    echo "Please, move to another directory and try again."
    HELP_VERSION && exit 0
fi
echo "Please, examine the above files to confirm they are ready to be removed."
echo "The next step is `nuclear`, as there is no going back after files are deleted. "
echo "Usually...."
press_enter &&
CONFIRM_DEL && HELP_VERSION && exit 0
