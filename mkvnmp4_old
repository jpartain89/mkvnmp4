#!/bin/bash -e

# This script is specifically for finding an .mp4 and its corresponding .mkv
# file for removal.

# Program information
PROGRAM_NAME="mkvnmp4"
PROGRAM_AUTHOR_CONTACT="${PROGRAM_NAME}_noreply@jpcdi.com"
PROGRAM_AUTHOR_FULL="JPCDI, JPartain89 and $PROGRAM_AUTHOR"
VERSION="1.5.0"

source allunix
git_cloning
git_updating
homebin_install

CONFIRM_DEL() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] && rm -f "$file" ;
    done < <(find . -type f -iname "*.mkv" -exec echo {} \; )
}

SHOW_OUTPUT() {
    while IFS= read -r file; do
        [[ -e ${file%.mkv}.mp4 ]] &&
        echo "$file ${RED}<--THIS ONE TO BE REMOVED${NORMAL} " &
        echo "$file" ;
    done < <(find . -type f -iname "*.mkv" -exec echo {} \; )
}
iSHOW_OUTPUT() {
    SHOW_OUTPUT | tee "$tmp_file"
}


USAGE() {
cat <<- EOF
$PROGRAM_NAME

${RED}This script must be called from within the directory you want to work on,
or you must assume it will recursively search and take action from within the
entire directory tree below your current location.${NORMAL}

${BLUE}First, we will show${NORMAL} ${RED}what${NORMAL} ${BLUE}files will be removed.
This list will be the specific .mkv files that are duplicates, shown without
their .mp4 dopplegangers.
Then, you must enter${NORMAL} ${RED}`y` or `N`${NORMAL} ${BLUE}to confirm or deny the deletion.${NORMAL}
EOF
}

trap 'rm $tmp_file; HELP_VERSION; exit 1' SIGHUP SIGINT SIGTERM

if [[ $(iSHOW_OUTPUT) == "" ]]; then
    echo "We were unable to find any duplicate files."
    echo "Please, move to another directory and try again."
    echo ""
    HELP_VERSION &&
    exit 0
else
    cat $tmp_file
    echo "Please, examine the above files to confirm they are ready to be removed."
    echo "The next step is \"nuclear\", as there is no going back after files are deleted. "
    echo "Usually...."
    press_enter &&
    CONFIRM_DEL &&
    echo ""
    HELP_VERSION &&
    exit 0
fi
